cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.33.0.
--
-- see: https://github.com/sol/hpack
--
-- hash: 0a085a59e3d7ad65dd4506b90493f442b159d88e69dad9d7bd0d1709cdaf95e1

name:           tt-exp
version:        0.1.0.0
description:    Please see the README on GitHub at <https://github.com/CoderPuppy/tt-exp#readme>
homepage:       https://github.com/CoderPuppy/tt-exp#readme
bug-reports:    https://github.com/CoderPuppy/tt-exp/issues
author:         CoderPuppy
maintainer:     coderpup@gmail.com
copyright:      2022 CoderPuppy
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md

source-repository head
  type: git
  location: https://github.com/CoderPuppy/tt-exp

library
  exposed-modules:
      TTExp.Basic
      TTExp.Core
      TTExp.Cubical
      TTExp.Holes
      TTExp.Monad.Meta
      TTExp.Refinements
      TTExp.Universes
      TTExp.Util
  other-modules:
      Paths_tt_exp
  hs-source-dirs:
      src
  default-extensions: ApplicativeDo BangPatterns BinaryLiterals BlockArguments ConstrainedClassMethods ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveLift DeriveTraversable DerivingStrategies DerivingVia DisambiguateRecordFields EmptyCase EmptyDataDecls EmptyDataDeriving ExistentialQuantification ExplicitForAll ExplicitNamespaces FunctionalDependencies GADTSyntax GADTs GeneralizedNewtypeDeriving ImplicitParams ImportQualifiedPost ImpredicativeTypes KindSignatures LambdaCase LiberalTypeSynonyms MagicHash MonoLocalBinds MultiParamTypeClasses MultiWayIf NamedFieldPuns NamedWildCards NegativeLiterals NumDecimals NumericUnderscores OverloadedLabels PartialTypeSignatures PatternGuards PatternSynonyms PolyKinds QuantifiedConstraints RankNTypes RecordWildCards RoleAnnotations ScopedTypeVariables StandaloneDeriving TemplateHaskell TemplateHaskellQuotes TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeInType TypeOperators UnboxedSums UnboxedTuples UnliftedNewtypes ViewPatterns
  ghc-options: -Wno-tabs
  build-depends:
      base >=4.7 && <5
    , containers
    , data-fix
    , deriving-compat
    , either
    , extra
    , safe
    , stm
    , transformers
  default-language: Haskell2010

test-suite tt-exp-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Paths_tt_exp
  hs-source-dirs:
      test
  default-extensions: ApplicativeDo BangPatterns BinaryLiterals BlockArguments ConstrainedClassMethods ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveLift DeriveTraversable DerivingStrategies DerivingVia DisambiguateRecordFields EmptyCase EmptyDataDecls EmptyDataDeriving ExistentialQuantification ExplicitForAll ExplicitNamespaces FunctionalDependencies GADTSyntax GADTs GeneralizedNewtypeDeriving ImplicitParams ImportQualifiedPost ImpredicativeTypes KindSignatures LambdaCase LiberalTypeSynonyms MagicHash MonoLocalBinds MultiParamTypeClasses MultiWayIf NamedFieldPuns NamedWildCards NegativeLiterals NumDecimals NumericUnderscores OverloadedLabels PartialTypeSignatures PatternGuards PatternSynonyms PolyKinds QuantifiedConstraints RankNTypes RecordWildCards RoleAnnotations ScopedTypeVariables StandaloneDeriving TemplateHaskell TemplateHaskellQuotes TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeInType TypeOperators UnboxedSums UnboxedTuples UnliftedNewtypes ViewPatterns
  ghc-options: -Wno-tabs -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base >=4.7 && <5
    , containers
    , stm
    , transformers
    , tt-exp
  default-language: Haskell2010
